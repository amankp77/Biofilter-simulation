class BrownianParticle{
    PVector pos;
    PVector vel;
    BrownianParticle(PVector pos){
        this.pos = pos;
        vel = new PVector(400,400);
        vel.sub(pos);
        vel.normalize();
    }

    void show(){
        stroke(255);
        strokeWeight(3);
        point(pos.x, pos.y);
    }

    void update(){
        PVector small = PVector.random2D();
        small.mult(0.03);
        //if(pos.dist(new PVector(400,400)) < 300){
        //    vel.
        //}
        vel.add(small);
        pos.add(vel);
    }
}

// create an array of particles of N particles
int N = 1000;
BrownianParticle[] particles = new BrownianParticle[N];

int R = 400;

void setup(){
    size(800,800);
    background(0);

    for(int i = 0; i < N; i++){
        float angle = random(TAU);
        particles[i] = new BrownianParticle(
            new PVector(400+R*cos(angle), 400+R*sin(angle))
        );
    }   
}

void draw(){
    background(0);
    fill(color(95,35,107));
    circle(400,400,600);

    fill(color(0xAF,0xBB,0xF2));
    circle(400,400,400);

    
    fill(color(0xED,0x85,0x54));
    circle(400,400,200);

    fill(color(0xF5,0xEB,0x6D));
    circle(400,400,100);

    for(int i = 0; i < N; i++){
        particles[i].show();
        particles[i].update();
    }
}
